- string format raises exception on reference
- attribute access on DynamicProxy attr that happens to be reference raises exception + add method to explicitly allow it
- attribute access on declared (explicit in dataclass or explicit in access) reference attribute returns reference, not proxy
- plugins now properly validate Ref[Dataclass] vs Dataclass
- support inheritance for dataclasses, both for registering them and on the plugin boundary -> correctly link children with associated dataclass, rather than top-level parent
    TODO: add test that returns such a child dataclass, not wrapped in reference
- Ref[DC] passed to plugin now results in a proper reference (instead of DC with ref attrs.
    Only coerced when plugin does not accept references and dataclass supports it.
    Rject Reference[DC] for plugins annotated as DC if coercion is not possible
- allow references in dict (and deprecated untyped list) attributes
- validate DC attributes. Don't allow references unless declared
- require explicit reference annotation for object, list[object] etc
- Fixed error reporting where Reference[object] was printed as Reference[None]
- during type validation: point out references, instead of simple "has incompatible type", for primitives but also list[str] etc
- validation error: correctly report expected type for unions of type and reference


- TODO: follow-up: std plugin annotations
- TODO: I added "fix breaking bug on unions involving a dataclass" at some point. What's that about. Add test if still relevant
