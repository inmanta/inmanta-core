.. -*- mode: rst -*-




{% if data['module_compatibility_ranges']%}


Module compatibility ranges
~~~~~~~~~~~~~~~~~~~~~~~~~~~


During module development, when the version of the module integrates tightly with a specific ISO version,
we need a way to tell the CI which version of the module should be used per ISO line. This can be achieved by either:

- Using a specific index per ISO version
- Adding a project constraint file with the compatible module ranges for each ISO version.

{% set list_only = ["lsm", "std"] %}

.. only:: iso


    The table below shows the set of Inmanta modules that integrate tightly with version |version_major| of the
    Inmanta Service Orchestrator and the constraints on their version.

    .. list-table:: Modules
       :header-rows: 1

       * - Module
         - Version constraint

       {% for key, value in data["module_compatibility_ranges"]  | dictsort %}
       {% if key in list_only %}
       * - {{ key }}
         - {{ value }}
       {% endif %}
       {% endfor %}

.. only:: oss

    The table below shows the set of Inmanta modules that integrate tightly with this Inmanta OSS version |release|
    and the constraints on their version.

    .. list-table:: Modules
       :header-rows: 1

       * - .. centered:: Module

       {% for key, value in data["module_compatibility_ranges"] | dictsort %}
       {% if key in list_only %}
       * - {{ key }}
       {% endif %}
       {% endfor %}

.. note::

    This information is also available in a machine-consumable format in the `compatibility.json <./compatibility.json>`_ file.

{% endif %}


.. only:: iso

    {% if data['component_requirements'] %}

    .. note::

        If for some reason you need to install any of the components that make up the inmanta-service-orchestrator
        package separately e.g. when developing an Inmanta extension, the ranges of the Inmanta Python components this
        product version is compatible with are available as a constraints file in
        `requirements.components.txt <./requirements.components.txt>`_ and in json format in the
        `compatibility.json <./compatibility.json>`_ file.


    {% endif %}
