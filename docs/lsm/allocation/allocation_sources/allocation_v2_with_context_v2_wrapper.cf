import lsm
import lsm::fsm


entity ValueService extends lsm::ServiceEntity:
    string                      name
    lsm::attribute_modifier     name__modifier="rw"

    int?                        first_value
    lsm::attribute_modifier     first_value__modifier="r"

    dict?                       allocated
    lsm::attribute_modifier     allocated__modifier="r"
end
ValueService.embedded_values [0:] -- EmbeddedValue

entity EmbeddedValue extends lsm::EmbeddedEntity:
    string                      id
    lsm::attribute_modifier     id__modifier="rw"

    int?                        third_value
    lsm::attribute_modifier     third_value__modifier="r"
end

implement ValueService using parents
implement EmbeddedValue using std::none

binding = lsm::ServiceEntityBinding(
    service_entity="__config__::ValueService",
    lifecycle=lsm::fsm::simple,
    service_entity_name="value-service",
    allocation_spec="value_allocation",
)

for assignment in lsm::context_v2_unwrapper(
    assignments=lsm::all(binding),
    fallback_attribute="allocated",
):
    attributes = assignment["attributes"]

    service = ValueService(
        instance_id=assignment["id"],
        entity_binding=binding,
        name=attributes["name"],
        first_value=attributes["first_value"],
        allocated=attributes["allocated"],
    )

    for embedded_value in attributes["embedded_values"]:
        service.embedded_values += EmbeddedValue(
            **embedded_value
        )
    end
end

# docs cut off here.
import unittest

implement ValueService using do_deploy

implementation do_deploy for ValueService:
    r1 = unittest::Resource(
            name=self.instance_id,
            desired_value="ok",
            send_event=true,
    )
    self.resources += r1
end
