entity ValueServiceV3 extends lsm::ServiceEntity:
    string                      name
    lsm::attribute_modifier     name__modifier="rw"
    int?                        first_value
    lsm::attribute_modifier     first_value__modifier="r"
end

index ValueServiceV3(name)
ValueServiceV3.embedded_values [0:] -- EmbeddedValueV3

implementation set_first_value for ValueServiceV3:
    self.first_value = get_first_value(self, "first_value")
    for embedded_value in self.embedded_values:
        embedded_value.third_value = get_third_value(self, "embedded_values[id={{embedded_value.id}}].third_value")
    end
end

entity EmbeddedValueV3 extends lsm::EmbeddedEntity:
    string                      id
    lsm::attribute_modifier     id__modifier="rw"
    int?                        third_value
    lsm::attribute_modifier     third_value__modifier="r"
    string[]? __lsm_key_attributes = ["id"]
end

index EmbeddedValueV3(id)

implement ValueServiceV3 using parents, set_first_value
implement EmbeddedValueV3 using std::none

valuev3_binding = lsm::ServiceEntityBindingV2(
    service_entity="allocatorv3_demo::ValueServiceV3",
    lifecycle=lsm::fsm::simple,
    service_entity_name="value-service-v3",
    allocation_spec="value_allocation_v3",
    service_identity="name",
    service_identity_display_name="Name",
)

for assignment in lsm::all(valuev3_binding):
    attributes = assignment["attributes"]

    service = ValueServiceV3(
        instance_id=assignment["id"],
        entity_binding=valuev3_binding,
        name=attributes["name"],
    )

    for embedded_value in attributes["embedded_values"]:
        service.embedded_values += EmbeddedValueV3(
            id=embedded_value["id"],
        )
    end
end
