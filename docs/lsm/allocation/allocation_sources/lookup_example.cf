import lsm
import lsm::fsm

entity VirtualWire extends lsm::ServiceEntity:
    string router_a
    int port_a
    int vlan_a
    string router_z
    int port_z
    int vlan_z
    int? vni
    std::ipv4_address?  router_a_mgmt_ip
    std::ipv4_address?  router_z_mgmt_ip
    lsm::attribute_modifier vni__modifier="r"
    lsm::attribute_modifier router_a_mgmt_ip__modifier="r"
    lsm::attribute_modifier router_z_mgmt_ip__modifier="r"
    lsm::attribute_modifier router_a__modifier="rw+"
    lsm::attribute_modifier router_z__modifier="rw+"
end

implement VirtualWire using parents, do_deploy

for assignment in lsm::all(binding):
  VirtualWire(
      instance_id=assignment["id"],
      router_a = assignment["attributes"]["router_a"],
      port_a = assignment["attributes"]["port_a"],
      vlan_a = assignment["attributes"]["vlan_a"],
      router_z = assignment["attributes"]["router_z"],
      port_z = assignment["attributes"]["port_z"],
      vlan_z = assignment["attributes"]["vlan_z"],
      vni=assignment["attributes"]["vni"],
      router_a_mgmt_ip=assignment["attributes"]["router_a_mgmt_ip"],
      router_z_mgmt_ip=assignment["attributes"]["router_z_mgmt_ip"],
      entity_binding=binding,
  )
end

binding = lsm::ServiceEntityBinding(
    service_entity="__config__::VirtualWire",
    lifecycle=lsm::fsm::simple,
    service_entity_name="virtualwire",
    allocation_spec="allocate_for_virtualwire",
)

import unittest

implementation do_deploy for VirtualWire:
    r1 = unittest::Resource(
            name=self.instance_id,
            desired_value="{{self.vni}}",
            send_event=true,
    )
    self.resources += r1
end
