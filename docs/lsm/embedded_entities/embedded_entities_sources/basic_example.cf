import lsm
import lsm::fsm
import ip

entity ServiceX extends lsm::ServiceEntity:
    """
        The API of ServiceX.

        :attr service_id: A unique ID for this service.
    """
    string service_id
end

index ServiceX(service_id)

ServiceX.customer_router [1] -- Router
ServiceX.provider_router [1] -- Router

entity Router extends lsm::EmbeddedEntity:
    """
        Router details.

        :attr name: The name of the router.
        :attr system_ip: The system ip of the router.
        :attr vendor: The vendor of the router.
        :attr chassis: The chassis of the router.
    """
    string name
    ip::ip system_ip
    lsm::attribute_modifier system_ip__modifier="rw+"
    string vendor
    string chassis
end

index Router(name)

implement ServiceX using parents
implement Router using parents

binding = lsm::ServiceEntityBindingV2(
    service_entity="__config__::ServiceX",
    lifecycle=lsm::fsm::service,
    service_entity_name="service_x",
)

for instance in lsm::all(binding):
    ServiceX(
        instance_id=instance["id"],
        entity_binding=binding,
        service_id=instance["attributes"]["service_id"],
        customer_router=Router(**instance["attributes"]["customer_router"]),
        provider_router=Router(**instance["attributes"]["provider_router"]),
    )
end
