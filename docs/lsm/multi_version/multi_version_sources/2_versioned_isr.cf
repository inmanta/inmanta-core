import lsm
import lsm::fsm

entity Service extends lsm::ServiceEntity:
    string name
end

index Service(instance_id)
implement Service using parents

entity ChildService extends Service:
    string description
end

implement ChildService using parents

entity RefService extends lsm::ServiceEntity:
    string ref_name
end

implement RefService using parents

RefService.ref [1] lsm::__service__, lsm::__rw__ Service

child_service_binding = lsm::ServiceBinding(
    service_entity_name="child_service",
    default_version=1,
    versions=[
        lsm::ServiceBindingVersion(
            service_entity="__config__::Service",
            lifecycle=lsm::fsm::simple,
            version=0
        ),
        lsm::ServiceBindingVersion(
            service_entity="__config__::ChildService",
            lifecycle=lsm::fsm::simple,
            version=1
        ),
    ]
)

main_service_binding = lsm::ServiceBinding(
    service_entity_name="main_service",
    default_version=0,
    versions=[
        lsm::ServiceBindingVersion(
            service_entity="__config__::RefService",
            lifecycle=lsm::fsm::simple,
            version=0,
        )
    ]
)

for instance in lsm::all(child_service_binding):
    ChildService(
        instance_id=instance["id"],
        name=instance["attributes"]["name"],
        description=instance["service_entity_version"] > 0 ? instance["attributes"]["description"] : "old service",
        entity_binding=lsm::get_service_binding_version(child_service_binding, instance["service_entity_version"]),
    )
end

for instance in lsm::all(main_service_binding):
    RefService(
        instance_id=instance["id"],
        ref_name=instance["attributes"]["ref_name"],
        ref=ChildService[instance_id=instance["attributes"]["ref"]],
        entity_binding=lsm::get_service_binding_version(main_service_binding, 0)
    )
end
