[tool.black]
line-length = 128
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | \.env
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.mypy]
plugins = [
    'pydantic.mypy'
]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
disallow_untyped_defs = true
follow_imports = 'silent'
no_implicit_optional = true
no_implicit_reexport = true
show_error_codes = true
strict_optional = true
strict_equality = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_untyped_fields = true

[tool.irt.build.python]
hooks = { 'pre' = 'pre-build.sh' }

[tool.irt.build.python.subprojects.pytest-inmanta-extensions]
directory = "tests_common"

[tool.irt.publish.python]
public = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
markers = [
    "slowtest",
    "link_check",
    "parametrize_any: only execute one of the parameterized cases when in fast mode (see documentation in conftest.py)",
    "db_restore_dump(dump): mark the db dump to restore. To be used in conjunction with the `migrate_db_from` fixture."
]
log_format = "%(asctime)s.%(msecs)03d %(levelname)s %(message)s"

[tool.coverage.run]
parallel = true
branch = false
