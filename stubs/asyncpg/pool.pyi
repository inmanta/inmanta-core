# Stubs for asyncpg.pool (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.
from asyncpg import Connection

from . import connection, Record
from typing import Any, Optional, AsyncContextManager, List

class Pool:
    _closing: bool
    _closed: bool
    _maxsize: int
    def __init__(self, *connect_args: Any, min_size: Any, max_size: Any, max_queries: Any, max_inactive_connection_lifetime: Any, setup: Any, init: Any, loop: Any, connection_class: Any, **connect_kwargs: Any) -> None: ...
    def set_connect_args(self, dsn: Optional[Any] = ..., **connect_kwargs: Any) -> None: ...
    async def execute(self, query: str, *args: Any, timeout: float=...) -> str: ...
    async def executemany(self, command: str, args: Any, *, timeout: float=...) -> Any: ...
    async def fetch(self, query: Any, *args: Any, timeout: Any=...) -> List[Record]: ...
    async def fetchval(self, query: Any, *args: Any, column: int = ..., timeout: Optional[Any] = ...) -> object: ...
    async def fetchrow(self, query: Any, *args: Any, timeout: Optional[Any] = ...) -> Record: ...
    def acquire(self, *, timeout: float = ...) -> AsyncContextManager[Connection]: ...
    async def release(self, connection: Any, *, timeout: Optional[Any] = ...) -> None: ...
    async def close(self) -> None: ...
    def terminate(self) -> None: ...
    async def expire_connections(self) -> None: ...
    async def __aexit__(self, *exc: Any) -> None: ...

class PoolAcquireContext:
    pool: Any
    timeout: Any
    connection: Any
    done: bool
    def __init__(self, pool: Pool, timeout: int) -> None: ...
    async def __aenter__(self) -> Connection: ...
    async def __aexit__(self, *exc: object) -> None: ...
    def __await__(self) -> AsyncContextManager[Connection]: ...

def create_pool(dsn: Optional[Any] = ..., *, min_size: int = ..., max_size: int = ..., max_queries: int = ..., max_inactive_connection_lifetime: float = ..., setup: Optional[Any] = ..., init: Optional[Any] = ..., loop: Optional[Any] = ..., connection_class: Any = ..., **connect_kwargs: Any) -> Pool: ...
