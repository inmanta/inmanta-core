# Stubs for tornado.concurrent (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import types
from concurrent import futures
from typing import Any, Callable, Optional, Tuple, Union, TypeVar
import asyncio 

_T =  TypeVar("_T")

class ReturnValueIgnoredError(Exception): ...

Future = asyncio.Future

FUTURES =  Union[futures.Future, Future]

def is_future(x: Any) -> bool: ...

class DummyExecutor(futures.Executor):
    def submit(self, fn: Callable[..., _T], *args: Any, **kwargs: Any) -> futures.Future[_T]: ...
    def shutdown(self, wait: bool=...) -> None: ...

dummy_executor: Any

def run_on_executor(*args: Any, **kwargs: Any) -> Callable: ...
def chain_future(a: Future[_T], b: Future[_T]) -> None: ...
def future_set_result_unless_cancelled(future: Union[futures.Future[_T], Future[_T]], value: _T) -> None: ...
def future_set_exception_unless_cancelled(future: Union[futures.Future[_T], Future[_T]], exc: BaseException) -> None: ...
def future_set_exc_info(future: Union[futures.Future[_T], Future[_T]], exc_info: Tuple[Optional[type], Optional[BaseException], Optional[types.TracebackType]]) -> None: ...
def future_add_done_callback(future: futures.Future[_T], callback: Callable[[futures.Future[_T]], None]) -> None: ...
