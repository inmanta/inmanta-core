# Stubs for tornado.util (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import datetime
import typing
import unittest
from types import TracebackType
from typing import Any, Callable, Dict, Mapping, Optional, Sequence, Tuple, Type, Union

bytes_type = bytes
unicode_type = str
basestring_type = str

class TimeoutError(Exception): ...

class ObjectDict(Dict[str, Any]):
    def __getattr__(self, name: str) -> Any: ...
    def __setattr__(self, name: str, value: Any) -> None: ...

class GzipDecompressor:
    decompressobj: Any = ...
    def __init__(self) -> None: ...
    def decompress(self, value: bytes, max_length: int=...) -> bytes: ...
    @property
    def unconsumed_tail(self) -> bytes: ...
    def flush(self) -> bytes: ...

def import_object(name: str) -> Any: ...
def exec_in(code: Any, glob: Dict[str, Any], loc: Mapping[str, Any]=...) -> None: ...
def raise_exc_info(exc_info: Tuple[Optional[type], Optional[BaseException], Optional[TracebackType]]) -> typing.NoReturn: ...
def errno_from_exception(e: BaseException) -> Optional[int]: ...
def re_unescape(s: str) -> str: ...

class Configurable:
    def __new__(cls: Any, *args: Any, **kwargs: Any) -> Any: ...
    @classmethod
    def configurable_base(cls: Any) -> Type[Configurable]: ...
    @classmethod
    def configurable_default(cls: Any) -> Type[Configurable]: ...
    initialize: Callable[..., None] = ...
    @classmethod
    def configure(cls: Any, impl: Union[None, str, Type[Configurable]], **kwargs: Any) -> None: ...
    @classmethod
    def configured_class(cls: Any) -> Type[Configurable]: ...

class ArgReplacer:
    name: Any = ...
    arg_pos: Any = ...
    def __init__(self, func: Callable, name: str) -> None: ...
    def get_old_value(self, args: Sequence[Any], kwargs: Dict[str, Any], default: Any=...) -> Any: ...
    def replace(self, new_value: Any, args: Sequence[Any], kwargs: Dict[str, Any]) -> Tuple[Any, Sequence[Any], Dict[str, Any]]: ...

def _websocket_mask_python(mask: bytes, data: bytes) -> bytes: ...

def timedelta_to_seconds(td: datetime.timedelta) -> float: ...
_websocket_mask = _websocket_mask_python
_websocket_mask = _websocket_mask_python

def doctests() -> unittest.TestSuite: ...
