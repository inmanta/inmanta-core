
entity Virtualmachine extends std::Dataclass:
    string name
    string os
    int ram
    int cpus
    int disk
end

implement Virtualmachine using std::none

# Construct in model
two = Virtualmachine(name="A", os="B", ram=1, cpus=2, disk=10)

# Construct in python
one=make_virtual_machine()

# Relations work
one.requires = one

# from model into plugin
eat_vm(one)
# from python into plugin
eat_vm(two)

# partial object into plugin
three = Virtualmachine(name="B", os="B", ram=1, cpus=2)
eat_vm(three)
three.disk = 5


# List into plugin
vms = [one, two, three]
selected = select_vm(vms, "A")


# Preserves object identity
# one = selected

# Return null
assert_true = select_vm(vms, "z") == null
assert_true = true


# List from relation into plugin
entity VMCollector:
end

implement VMCollector using std::none

VMCollector.vms [0:] -- Virtualmachine

c1 = VMCollector()
c1.vms += one
c1.vms += two
c1.vms += three

other_selected = select_vm(c1.vms, "A")
