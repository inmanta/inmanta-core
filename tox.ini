[tox]
envlist = pep8,py36,mypy,docs
skip_missing_interpreters=True
requires = pip
           virtualenv >= 20.2.2

[testenv:py36]
basepython=python3.6

[testenv:py38]
basepython=python3.8

[testenv]
deps=
    -rrequirements.dev.txt
    -rrequirements.txt
extras=
    dataflow_graphic
commands=py.test --log-level DEBUG --cov=inmanta --cov-report term --cov-report xml --junitxml=junit-{envname}.xml -vvv tests/
# The HOME environment variable is required for Git to discover the user.email and
# user.name config options (required by test case: tests/test_app.py::test_init_project)
passenv=SSH_AUTH_SOCK ASYNC_TEST_TIMEOUT HOME

[testenv:pep8]
deps=
    -rrequirements.dev.txt
commands = flake8 src tests tests_common
basepython = python3

[testenv:isort]
deps=
    isort
commands =
    isort --verbose --check -sp setup.cfg --diff -rc src tests tests_common
install_command=pip install -c requirements.dev.txt -c requirements.txt {opts} {packages}
basepython = python3

[testenv:docs]
basepython=python3
changedir=docs
deps=pytest
    -rrequirements.dev.txt
    -rrequirements.txt
install_command=pip install -c requirements.dev.txt -c requirements.txt {opts} {packages}
commands=py.test -v check_sphinx.py -m "not link_check"

[testenv:docs-link-check]
basepython=python3
changedir=docs
deps=pytest
    -rrequirements.dev.txt
    -rrequirements.txt
install_command=pip install -c requirements.dev.txt -c requirements.txt {opts} {packages}
commands=py.test -v check_sphinx.py

[testenv:mypy]
deps=
    mypy
    lxml
commands_pre = mkdir -p coverage
whitelist_externals = */mkdir
setenv = MYPYPATH=stubs:src
install_command=pip install -c requirements.dev.txt -c requirements.txt {opts} {packages}
commands =
    python -m mypy --junit-xml mypy.xml --cobertura-xml-report coverage -p inmanta
basepython = python3
ignore_outcome = true